{"is_source_file": true, "format": "Python", "description": "This file defines the ProductsService class, providing a service layer that encapsulates business logic for product-related operations. It interacts with a repository layer to perform CRUD operations and handles exceptions to return appropriate HTTP responses.", "external_files": ["../schemas/product", "../repositories/products_repository"], "external_methods": ["Product", "ProductCreate", "ProductUpdate", "IProductsRepository.list", "IProductsRepository.get", "IProductsRepository.create", "IProductsRepository.update", "IProductsRepository.delete", "ProductNotFoundError", "HTTPException", "status.HTTP_404_NOT_FOUND"], "published": ["ProductsService"], "classes": [{"name": "ProductsService", "description": "Service layer class that provides methods for listing, retrieving, creating, updating, and deleting products, encapsulating business rules and handling repository interactions."}], "methods": [{"name": "None __init__(self, repo: IProductsRepository)", "description": "Constructor that initializes the service with a repository instance.", "scope": "ProductsService", "scopeKind": "class"}, {"name": "List[Product] list_products(self)", "description": "Returns a list of all products by calling the repository's list method.", "scope": "ProductsService", "scopeKind": "class"}, {"name": "Product get_product(self, product_id: int)", "description": "Retrieves a product by ID; raises HTTP 404 if not found.", "scope": "ProductsService", "scopeKind": "class"}, {"name": "Product create_product(self, payload: ProductCreate)", "description": "Creates a new product with the provided payload.", "scope": "ProductsService", "scopeKind": "class"}, {"name": "Product update_product(self, product_id: int, payload: ProductUpdate)", "description": "Updates an existing product by ID with the provided payload; raises HTTP 404 if not found.", "scope": "ProductsService", "scopeKind": "class"}, {"name": "None delete_product(self, product_id: int)", "description": "Deletes a product by ID; raises HTTP 404 if not found.", "scope": "ProductsService", "scopeKind": "class"}], "calls": ["self.repo.list()", "self.repo.get(product_id)", "self.repo.create(payload)", "self.repo.update(product_id, payload)", "self.repo.delete(product_id)", "raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail=str(e))"], "search-terms": ["ProductsService", "product operations", "repository", "business logic", "ProductNotFoundError"], "state": 2, "file_id": 9, "knowledge_revision": 20, "git_revision": "", "ctags": [{"_type": "tag", "name": "ProductsService", "path": "/home/kavia/workspace/code-generation/product-management-api-146572-146606/products_backend/src/api/services/products_service.py", "pattern": "/^class ProductsService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/product-management-api-146572-146606/products_backend/src/api/services/products_service.py", "pattern": "/^    def __init__(self, repo: IProductsRepository) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, repo: IProductsRepository)", "scope": "ProductsService", "scopeKind": "class"}, {"_type": "tag", "name": "create_product", "path": "/home/kavia/workspace/code-generation/product-management-api-146572-146606/products_backend/src/api/services/products_service.py", "pattern": "/^    def create_product(self, payload: ProductCreate) -> Product:$/", "language": "Python", "typeref": "typename:Product", "kind": "member", "signature": "(self, payload: ProductCreate)", "scope": "ProductsService", "scopeKind": "class"}, {"_type": "tag", "name": "delete_product", "path": "/home/kavia/workspace/code-generation/product-management-api-146572-146606/products_backend/src/api/services/products_service.py", "pattern": "/^    def delete_product(self, product_id: int) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, product_id: int)", "scope": "ProductsService", "scopeKind": "class"}, {"_type": "tag", "name": "get_product", "path": "/home/kavia/workspace/code-generation/product-management-api-146572-146606/products_backend/src/api/services/products_service.py", "pattern": "/^    def get_product(self, product_id: int) -> Product:$/", "language": "Python", "typeref": "typename:Product", "kind": "member", "signature": "(self, product_id: int)", "scope": "ProductsService", "scopeKind": "class"}, {"_type": "tag", "name": "list_products", "path": "/home/kavia/workspace/code-generation/product-management-api-146572-146606/products_backend/src/api/services/products_service.py", "pattern": "/^    def list_products(self) -> List[Product]:$/", "language": "Python", "typeref": "typename:List[Product]", "kind": "member", "signature": "(self)", "scope": "ProductsService", "scopeKind": "class"}, {"_type": "tag", "name": "update_product", "path": "/home/kavia/workspace/code-generation/product-management-api-146572-146606/products_backend/src/api/services/products_service.py", "pattern": "/^    def update_product(self, product_id: int, payload: ProductUpdate) -> Product:$/", "language": "Python", "typeref": "typename:Product", "kind": "member", "signature": "(self, product_id: int, payload: ProductUpdate)", "scope": "ProductsService", "scopeKind": "class"}], "hash": "478658512eb86801a93a450b70c7bd86", "format-version": 4, "code-base-name": "products_backend", "filename": "products_backend/src/api/services/products_service.py", "revision_history": [{"20": ""}]}