{"is_source_file": true, "format": "Python", "description": "This file sets up API routes for product management in a FastAPI application, including endpoints for listing, retrieving, creating, updating, and deleting products. It configures dependency injection of the ProductsService and defines route-specific logic with descriptive docstrings.", "external_files": ["../schemas/product", "../repositories/products_repository", "../services/products_service"], "external_methods": ["Depends", "APIRouter", "Path", "status.HTTP_200_OK", "status.HTTP_201_CREATED", "status.HTTP_204_NO_CONTENT"], "published": ["list_products", "get_product", "create_product", "update_product", "delete_product"], "classes": [], "methods": [{"name": "ProductsService get_service()", "description": "Provides a ProductsService instance, injecting dependencies; swaps repository implementation in production.", "scope": "", "scopeKind": ""}, {"name": "create_product( payload: ProductCreate, service: ProductsService = Depends(get_service) )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "delete_product( product_id: int = Path(..., ge=1, description=\"ID of the product to delete\"), service: ProductsService = Depends(get_service), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "get_product( product_id: int = Path(..., ge=1, description=\"ID of the product to retrieve\"), service: ProductsService = Depends(get_service), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "list_products(service: ProductsService = Depends(get_service))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "update_product( product_id: int = Path(..., ge=1, description=\"ID of the product to update\"), payload: ProductUpdate = None, service: ProductsService = Depends(get_service), )", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["InMemoryProductsRepository", "ProductsService", "Depends", "list_products", "get_product", "create_product", "update_product", "service.delete_product"], "search-terms": ["products_api_routes", "fastapi_products_router", "product_crud_endpoints", "dependency_injection_products_service"], "state": 2, "file_id": 10, "knowledge_revision": 25, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_product", "path": "/home/kavia/workspace/code-generation/product-management-api-146572-146606/products_backend/src/api/routes/products.py", "pattern": "/^def create_product($/", "language": "Python", "kind": "function", "signature": "( payload: ProductCreate, service: ProductsService = Depends(get_service) )"}, {"_type": "tag", "name": "delete_product", "path": "/home/kavia/workspace/code-generation/product-management-api-146572-146606/products_backend/src/api/routes/products.py", "pattern": "/^def delete_product($/", "language": "Python", "kind": "function", "signature": "( product_id: int = Path(..., ge=1, description=\"ID of the product to delete\"), service: ProductsService = Depends(get_service), )"}, {"_type": "tag", "name": "get_product", "path": "/home/kavia/workspace/code-generation/product-management-api-146572-146606/products_backend/src/api/routes/products.py", "pattern": "/^def get_product($/", "language": "Python", "kind": "function", "signature": "( product_id: int = Path(..., ge=1, description=\"ID of the product to retrieve\"), service: ProductsService = Depends(get_service), )"}, {"_type": "tag", "name": "get_service", "path": "/home/kavia/workspace/code-generation/product-management-api-146572-146606/products_backend/src/api/routes/products.py", "pattern": "/^def get_service() -> ProductsService:$/", "language": "Python", "typeref": "typename:ProductsService", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_products", "path": "/home/kavia/workspace/code-generation/product-management-api-146572-146606/products_backend/src/api/routes/products.py", "pattern": "/^def list_products(service: ProductsService = Depends(get_service)):$/", "language": "Python", "kind": "function", "signature": "(service: ProductsService = Depends(get_service))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/product-management-api-146572-146606/products_backend/src/api/routes/products.py", "pattern": "/^router = APIRouter(prefix=\"\\/products\", tags=[\"Products\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_product", "path": "/home/kavia/workspace/code-generation/product-management-api-146572-146606/products_backend/src/api/routes/products.py", "pattern": "/^def update_product($/", "language": "Python", "kind": "function", "signature": "( product_id: int = Path(..., ge=1, description=\"ID of the product to update\"), payload: ProductUpdate = None, service: ProductsService = Depends(get_service), )"}], "hash": "b9006ab09392165113aa593d97d0501d", "format-version": 4, "code-base-name": "products_backend", "filename": "products_backend/src/api/routes/products.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/products\", tags=[\"Products\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"25": ""}]}